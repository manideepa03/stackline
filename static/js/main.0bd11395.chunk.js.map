{"version":3,"sources":["selectors/index.js","stackline_logo.svg","components/Header.js","components/SideBar.js","components/TableForm.js","App.js","reducers/index.js","serviceWorker.js","index.js"],"names":["listOfNumbers","state","employeeList","useStylesTab","makeStyles","theme","center","margin","width","padding","alignItems","backColor","backgroundColor","chip","spacing","Header","classes","className","src","logo","useSideMenuStyles","drawer","flexShrink","drawerPaper","background","SideBar","classes1","useSelector","Drawer","variant","anchor","paper","map","e","k","image","height","Typography","Box","fontFamily","fontSize","textAlign","fontWeight","color","title","subtitle","tags","m","n","Chip","label","useStyles","table","minwidth","overflow","position","marginLeft","draw","paddingTop","TableForm","columns","field","cl","data","sales","icons","Add","props","Edit","Delete","Clear","Check","Search","ResetSearch","FirstPage","LastPage","PreviousPage","NextPage","SortArrow","options","search","exportButton","App","dispatch","useDispatch","useEffect","fetch","then","res","json","type","payload","console","log","catch","err","error","classes2","INITIAL_STATE","_id","isSignedIn","configureStore","reducer","action","newState","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0bd11395.chunk.js","sourcesContent":["export const listOfNumbers = (state) => {\r\n    return state.employeeList\r\n}","export default __webpack_public_path__ + \"static/media/stackline_logo.5935081b.svg\";","import { makeStyles } from '@material-ui/core/styles'\r\nimport logo from '../stackline_logo.svg';\r\nconst useStylesTab = makeStyles((theme) => ({\r\n\r\n    center: {\r\n      margin: 'auto',\r\n      width: '30%',\r\n      padding: '10px',\r\n      alignItems: 'left',\r\n    },\r\n    backColor: {\r\n      backgroundColor: '#05446A',\r\n    },\r\n    chip: {\r\n      margin: theme.spacing(0.5),\r\n    },\r\n  }))\r\nconst Header = () => {\r\n    const classes = useStylesTab()\r\n    return (\r\n      <header className={classes.backColor}>\r\n          <img src={logo} className=\"App-logo\"  />\r\n      </header>\r\n  \r\n    )\r\n  \r\n  }\r\nexport default Header;\r\n  ","import { makeStyles } from '@material-ui/core/styles'\r\nimport {useSelector} from 'react-redux'\r\nimport {listOfNumbers} from '../selectors'\r\nimport { Drawer,Typography,Box,Chip} from '@material-ui/core'\r\nconst useStylesTab = makeStyles((theme) => ({\r\n\r\n  center: {\r\n    margin: 'auto',\r\n    width: '30%',\r\n    padding: '10px',\r\n    alignItems: 'left',\r\n  },\r\n  backColor: {\r\n    backgroundColor: '#05446A',\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(0.5),\r\n  },\r\n}))\r\n\r\nconst useSideMenuStyles = makeStyles((theme) => ({\r\n  drawer: {\r\n    width: '300px',\r\n   \r\n    flexShrink: 0\r\n  },\r\n  drawerPaper: {\r\n    width:'300px',\r\n    \r\n    background: '#ffffff'\r\n  },\r\n\r\n  \r\n}))\r\n\r\nconst SideBar = () => {\r\n  const classes = useSideMenuStyles()\r\n  \r\n  const classes1 = useStylesTab()\r\n  const employeeList = useSelector(listOfNumbers)\r\n\r\n  return (\r\n    <div>\r\n    <Drawer\r\n        variant=\"permanent\"\r\n        anchor=\"left\"\r\n        className={classes.drawer}\r\n        classes={{\r\n          paper: classes.drawerPaper\r\n        }}>\r\n          {employeeList.map((e, k)=>{\r\n          return <div key={k}>\r\n            <img src={e.image} width=\"150\" height=\"150\" />\r\n            <Typography>\r\n          <Box\r\n            fontFamily=\"Heboo, sans-serif\"\r\n            fontSize={36}\r\n            textAlign=\"center\"\r\n            fontWeight=\"fontWeightBold\"\r\n            color=\"#000000\"\r\n          >\r\n          {e.title}\r\n          </Box>\r\n        </Typography>\r\n        <Typography>\r\n          <Box\r\n            fontFamily=\"Heboo, sans-serif\"\r\n            fontSize={12}\r\n            textAlign=\"center\"\r\n            fontWeight=\"fontWeightNormal\"\r\n            color=\"#000000\"\r\n          >\r\n          {e.subtitle}\r\n          </Box>\r\n        </Typography>\r\n        <Typography>\r\n          <Box\r\n            fontFamily=\"Heboo, sans-serif\"\r\n            fontSize={12}\r\n            textAlign=\"center\"\r\n            fontWeight=\"fontWeightNormal\"\r\n            color=\"#000000\"\r\n          >\r\n          {e.tags}\r\n          </Box>\r\n        </Typography>\r\n        {e.tags.map((m,n) => {\r\n          return (\r\n            <Chip className={classes1.chip} label={m} />\r\n\r\n          )\r\n        })}\r\n        </div>\r\n        })}\r\n      </Drawer>\r\n      \r\n\r\n    \r\n    \r\n    </div>\r\n\r\n  )\r\n\r\n}\r\nexport default SideBar;","import { makeStyles } from '@material-ui/core/styles'\r\nimport {useSelector} from 'react-redux'\r\nimport {listOfNumbers} from '../selectors'\r\n\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\n\r\nimport MaterialTable from \"material-table\";\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n      minwidth: 600,\r\n      overflow: \"hidden\",\r\n      position:'absolute',\r\n      marginLeft:'300px'\r\n    },\r\n    draw: {\r\n      paddingTop:'30px',\r\n    }\r\n  });\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  const TableForm = () => {\r\n    const classes = useStyles()\r\n    const employeeList = useSelector(listOfNumbers)\r\n  \r\n    const columns = [\r\n      {\r\n        title: \"WEEK ENDING\",\r\n        field: \"weekEnding\",\r\n      },\r\n      {\r\n        title: \"RETAIL SALES\",\r\n        field: \"retailSales\",\r\n      },\r\n      {\r\n        title: \"WHOLESALE SALES\",\r\n        field: \"wholesaleSales\",\r\n      },\r\n      {\r\n        title: \"UNITS SOLD\",\r\n        field: \"unitsSold\",\r\n      },\r\n      {\r\n        title: \"RETAILER MARGIN\",\r\n        field: \"retailerMargin\",\r\n      },\r\n    ];\r\n  \r\n    \r\n    const cl = useStyles();\r\n    return (\r\n  \r\n      \r\n      <div className={cl.table} >\r\n        {employeeList.map((e,k) => {\r\n              return <MaterialTable title= {null}  data={e.sales} \r\n              columns={columns} \r\n              icons={{\r\n                Add: props => <AddIcon />,\r\n                Edit: props => <EditIcon />,\r\n                Delete: props => <DeleteIcon />,\r\n                Clear: props => <DeleteIcon />,\r\n                Check: props => <CheckIcon />,\r\n                Search: props => <SearchIcon />,\r\n                ResetSearch: props => <DeleteIcon />,\r\n                FirstPage: props=> <FirstPage />,\r\n                LastPage: props=> <LastPage/>,\r\n                PreviousPage : props=> <ChevronLeft  />,\r\n                NextPage : props=> <ChevronRight />,\r\n                SortArrow : props=> <ArrowDownward  />,\r\n              }}\r\n              options={{ search: true,  exportButton: false }}\r\n              \r\n              />}\r\n        )}\r\n      </div>\r\n  \r\n    )\r\n  \r\n  }\r\n\r\n  export default TableForm","import React, {useState,useEffect} from 'react';\r\n\r\n// import { Counter } from './features/counter/Counter';\r\nimport './App.css';\r\nimport {listOfNumbers} from './selectors'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport {useSelector,useDispatch} from 'react-redux'\r\nimport Header from \"./components/Header\"\r\nimport SideBar from \"./components/SideBar\"\r\nimport TableForm from \"./components/TableForm\"\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minwidth: 600,\r\n    overflow: \"hidden\",\r\n    position:'absolute',\r\n    marginLeft:'300px'\r\n  },\r\n  draw: {\r\n    paddingTop:'30px',\r\n  }\r\n});\r\n\r\nfunction App() {\r\n\r\n  const employeeList = useSelector(listOfNumbers)\r\n  const dispatch = useDispatch()\r\n  useEffect(()=>{\r\n    const ondata = fetch(\r\n      'https://manideepa03.github.io/stacklinedata/data/stackline_frontend_assessment_data_2021.json')\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        dispatch({type:\"GOT_DATA\", payload:data})\r\n\r\n        console.log(data)\r\n      })\r\n      .catch(err => console.error(err))\r\n     \r\n  },[])\r\n  \r\n  const classes2 = useStyles()\r\n    console.log(employeeList)\r\n  return (\r\n    <div className=\"App\">\r\n      <div>\r\n        <span>\r\n      <Header/>\r\n      </span>\r\n      </div>\r\n      <div className={classes2.draw}>\r\n        <span>\r\n      <SideBar />\r\n      </span>\r\n      </div>\r\n      <div>\r\n        <span>\r\n        <TableForm />\r\n        </span>\r\n      </div>\r\n      \r\n      </div>\r\n        \r\n      \r\n   \r\n  );\r\n}\r\n\r\nexport default App\r\n","import { configureStore } from '@reduxjs/toolkit';\r\n\r\n\r\n// import { combineReducers } from \"redux\"\r\n// import { reducer as formReducer } from \"redux-form\"\r\nconst INITIAL_STATE = {\r\n\t_id: null,\r\n\tisSignedIn: false,\r\n    employeeList:[]\r\n}\r\n\r\nconst employeeReducer = (state = INITIAL_STATE, action) => {\r\n    const newState = {...state}\r\n\tswitch (action.type) {\r\n\t\t// case FETCH_USER:\r\n\t\t// \treturn {\r\n\t\t// \t\t...state,\r\n\t\t// \t\t_id: action.payload._id,\r\n\t\t// \t\tisSignedIn: action.payload.isSignedIn,\r\n\t\t// \t\tcurrentUserName: action.payload.firstName\r\n\t\t// \t}\r\n        case \"GOT_DATA\":\r\n            newState.employeeList = action.payload\r\n            break\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n    return newState\r\n}\r\n\r\nexport default configureStore({\r\n  reducer: employeeReducer\r\n \r\n});\r\n\r\n\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\nimport store from \"./reducers\"\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\n\r\n// const store = createStore(reducers)\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n     <Provider store={store}> \r\n      <App />\r\n     </Provider> \r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}